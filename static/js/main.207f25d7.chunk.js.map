{"version":3,"sources":["containers/CollageImages/CharBox/constants.js","containers/CollageImages/CharBox/Puzzle.js","containers/CollageImages/CharBox/index.js","containers/CollageImages/Styled.js","containers/CollageImages/index.js","App.js","serviceWorker.js","index.js"],"names":["imagePositions","0","4","imagePool","sign","Math","floor","random","transformAnimation","min","max","x","y","z","s","keyframes","_templateObject","PuzzleWrapper","styled","div","_templateObject2","PuzzleBox","_templateObject3","props","imageUrl","concat","pos","delay","Puzzle","_ref","positions","charIndex","isActive","react_default","a","createElement","map","index","key","length","defaultProps","boxWidth","invisibleAnimation","CharBox_templateObject","CharBoxWrapper","CharBox_templateObject2","CharBox","char","className","CharBox_Puzzle","StyledHeader","Styled_templateObject","text","CollageImagesWrapper","Styled_templateObject2","OperatorWrapper","Styled_templateObject3","CollageImages","_useState","useState","_useState2","Object","slicedToArray","setIsActive","indexKey","split","CollageImages_CharBox","onClick","setTimeout","App","containers_CollageImages","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.207f25d7.chunk.js","sourcesContent":["export const imagePositions = {\n  0: [\n    [42, 20.5],\n    [42, 74],\n    [22.5, 22.5],\n    [61, 22.5],\n    [22.5, 71.6],\n    [61, 71.6],\n    [14.5, 28.5],\n    [69.5, 28.5],\n    [14.5, 65],\n    [69.5, 65],\n    [9.5, 35],\n    [76, 35],\n    [9.5, 57.6],\n    [76, 57.6],\n    [6.5, 42.5],\n    [79, 42.5],\n    [6.5, 50],\n    [79, 50],\n  ],\n  4: [\n    // 斜的\n    [42.5, 27.5],\n    [34, 34],\n    [24, 40],\n    [14, 46],\n    [5.5, 52.5],\n    [-2, 59.6],\n\n    // 橫的\n    [18.5, 59.6],\n    [38.1, 59.6],\n    [80.5, 59.6],\n\n    // 直的\n    [59, 20.5],\n    [59, 28],\n    [59, 36],\n    [59, 44.5],\n    [59, 52],\n    [59, 59.6],\n    [59, 66.7],\n    [59, 74],\n  ],\n};\n\nexport const imagePool = [\n  'https://cdn.dribbble.com/users/3073273/screenshots/6656805/296_2x.jpg',\n  'https://cdn.dribbble.com/users/437847/screenshots/6656746/van-goh-.jpg',\n  'https://cdn.dribbble.com/users/902766/screenshots/6656742/whoa.gif',\n  'https://cdn.dribbble.com/users/732486/screenshots/6656702/image.png',\n  'https://cdn.dribbble.com/users/2165454/screenshots/6656707/cannabis-cafe-logo1000.jpg',\n  'https://cdn.dribbble.com/users/4726/screenshots/6656682/bakula_2x.png',\n  'https://cdn.dribbble.com/users/2552283/screenshots/6656649/relax2.png',\n  'https://cdn.dribbble.com/users/1664576/screenshots/6656633/artist_2x.png',\n  'https://cdn.dribbble.com/users/62086/screenshots/6656619/we-love-help-people.jpg',\n  'https://cdn.dribbble.com/users/1029843/screenshots/6656613/2018_lemoncocco_fiat_wrap_thumb-01_2x.jpg',\n  'https://cdn.dribbble.com/users/224800/screenshots/6656598/comp_1_1.gif',\n  'https://cdn.dribbble.com/users/1018511/screenshots/6656570/stickers-di.jpg',\n  'https://cdn.dribbble.com/users/3110387/screenshots/6656577/andy_pollard_photography_3_1x.jpg',\n  'https://cdn.dribbble.com/users/1773427/screenshots/6656554/image.png',\n  'https://cdn.dribbble.com/users/2556713/screenshots/6656553/essie-01_2x.png',\n  'https://cdn.dribbble.com/users/968616/screenshots/6656539/flow_2x.jpg',\n  'https://cdn.dribbble.com/users/2088367/screenshots/6656493/dribbble-10_2x.png',\n  'https://cdn.dribbble.com/users/3086784/screenshots/6656476/h2o_2x.jpg',\n  'https://cdn.dribbble.com/users/622367/screenshots/6656437/nfb.png',\n  'https://cdn.dribbble.com/users/3597232/screenshots/6656462/1.jpg',\n  'https://cdn.dribbble.com/users/69458/screenshots/6656348/stock_2x.png',\n  'https://cdn.dribbble.com/users/1788811/screenshots/6656342/png_2x.png',\n  'https://cdn.dribbble.com/users/2899680/screenshots/6656329/hypo_baby_2x.jpg',\n];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { keyframes } from 'styled-components';\n\nimport {\n  imagePool,\n} from './constants';\n\nconst sign = () => (Math.floor(Math.random() * 10) % 2 === 0 ? 1 : -1);\nconst getRandomArbitrary = (min, max) => Math.random() * (max - min) + min;\nconst getRandomImage = () => imagePool[Math.floor(Math.random() * imagePool.length)];\n\nconst transformAnimation = () => {\n  const x = sign() * 1000 * Math.random();\n  const y = sign() * 1000 * Math.random();\n  const z = 500 * Math.random();\n  const s = getRandomArbitrary(2, 10);\n  return keyframes`\n    0% {\n      opacity: 0;\n      transform: translateX(${x}px) translateY(${y}px) translateZ(${z}px) scale(${s});\n    }\n    100% {\n      opacity: 1;\n      transform: translateX(0px) translateY(0px) translateZ(0px) scale(1);\n    }\n  `;\n};\n\nconst PuzzleWrapper = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n`;\n\nconst PuzzleBox = styled.div`\n  position: absolute;\n  width: 18%;\n  height: 6%;\n  border-radius: 5px;\n\n  background: url(${props => props.imageUrl});\n  background-size:cover;\n  background-position:center;\n\n  left: ${(props) => `${props.pos[0]}%;`};\n  top: ${(props) => `${props.pos[1]}%;`};\n  cursor: pointer;\n  transition: all 0.1s ease-in-out;\n\n  &:hover {\n    z-index: 1;\n    transform: scale(1.5);\n    box-shadow: 0 5px 30px rgba(0,0,0,0.3);\n    transition: all 0.1s ease-in-out;\n  }\n\n  animation : ${() => transformAnimation()} ${props => props.delay}s ease-in-out;\n\n  &:after {\n    content: '';\n    position: absolute;\n    font-size: 9px;\n    width: 100%;\n    height: 100%;\n    border-radius: 5px;\n    background: #ffc700;\n    opacity: 0.7;\n  }\n`;\n\nconst Puzzle = ({\n  positions,\n  charIndex,\n  isActive,\n}) => {\n  return (\n    <PuzzleWrapper>\n      {\n        isActive &&\n        positions.map((pos, index) => (\n          <PuzzleBox\n            key={index}\n            pos={pos}\n            delay={(charIndex + 1) * 0.6 + 0.8}\n            imageUrl={getRandomImage()}\n          />\n        ))\n      }\n    </PuzzleWrapper>\n  );\n};\n\nPuzzle.propTypes = {\n  positions: PropTypes.array,\n  boxWidth: PropTypes.number,\n  charIndex: PropTypes.number,\n};\n\nPuzzle.defaultProps = {\n  positions: [],\n  boxWidth: 0,\n  charIndex: 0,\n};\n\nexport default Puzzle;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { keyframes } from 'styled-components';\nimport Puzzle from './Puzzle';\n\nimport { imagePositions } from './constants';\n\nconst invisibleAnimation = keyframes`\n  0% {\n    color: #eee;\n  }\n  100% {\n    color: white;\n    opacity: 0;\n  }\n`;\n\nconst CharBoxWrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  .char-box__char {\n    color: #eee;\n    animation: ${invisibleAnimation} 1s ease-in;\n    animation-fill-mode: forwards; /* 保持動畫結束後的狀態 */\n  }\n`;\n\nconst CharBox = ({\n  char,\n  charIndex,\n  isActive,\n}) => {\n  return (\n    <CharBoxWrapper>\n      <div className=\"char-box__char\">{char}</div>\n      <Puzzle\n        positions={imagePositions[char]}\n        charIndex={charIndex}\n        isActive={isActive}\n      />\n    </CharBoxWrapper>\n  );\n};\n\nCharBox.propTypes = {\n  char: PropTypes.string,\n  charIndex: PropTypes.number,\n  isActive: PropTypes.bool,\n};\n\nCharBox.defaultProps = {\n  char: '',\n  charIndex: 0,\n  isActive: false,\n};\n\nexport default CharBox;\n","import styled from 'styled-components';\n\nexport const StyledHeader = styled.div`\n  position: relative;\n  width: 90vw;\n  /* height: 80vh; */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  font-size: ${(props) => 80 / props.text.length}vw;\n  transition: all 1s ease-in-out;\n`;\n\nexport const CollageImagesWrapper = styled.div`\n\n`;\n\nexport const OperatorWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import React, { useState, useCallback } from 'react';\nimport CharBox from './CharBox';\n\nimport {\n  StyledHeader,\n  CollageImagesWrapper,\n  OperatorWrapper,\n} from './Styled';\n\nconst CollageImages = () => {\n  // const text = '1234567890';\n  const [isActive, setIsActive] = useState(true);\n  const text = '404';\n  const indexKey = (index) => index;\n\n  const handleRepeatAnimation = () => {\n    setIsActive(false);\n    setTimeout((() => setIsActive(true)), 100);\n  };\n  return (\n    <CollageImagesWrapper>\n      <StyledHeader text={text}>\n        {\n          text.split('').map((char, index) => (\n            <CharBox\n              key={indexKey(index)}\n              char={char}\n              charIndex={index}\n              isActive={isActive}\n            />\n          ))\n        }\n      </StyledHeader>\n      <OperatorWrapper>\n        <button onClick={handleRepeatAnimation}>Repeat Animation</button>\n      </OperatorWrapper>\n    </CollageImagesWrapper>\n  );\n};\n\nexport default CollageImages;\n","import React from 'react';\n// import logo from './logo.svg';\n// import './App.css';\nimport CollageImages from 'containers/CollageImages';\n\nfunction App() {\n  return (\n    <main>\n      <CollageImages />\n    </main>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}